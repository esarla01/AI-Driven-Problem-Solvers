I have two .py files. The file radar1.py has the solution with only the recursive bayesian estimation. The file radar.py has te solution
that incorporates the variance of the data values (improved version). The first program provides wrong solutions for the object 4 and object 5 because speed
data given for those objects are not enough to determine the class of the object. Therefore, in radar.py file I improved radar1.py by
including the probability of being a class given a variance values in my design and class probability calculations. I used the sliding window
technique (with windows of length 3) to extract variance data for each object in each class and created a new pdf out of these data for both
of the classes in the form of dictionary. Then, I used these data in the recursive bayesian calculation to advance the probability calculation
as I added one more variable to the hidden markow model. Thus, I was able to get the classifications right in this program.


Assumptions:
I assumed the classification would start from equally distributed values. For two classes, the first prior values were 0.5 for each class.
I removed the NaN values by converting them to 0 to prevent these values to cancel the probabilities.
I assumed that the transitional probability is 0.9 for within the same class and 0.1 among different classes. This means the probability for staying as bird given the previous observation was bird is 0.9, whereas, the probability that the object is a plane given based on the previous  observation is 0.1.
I assumed that the probability of one data influence the other and therefore probabilities are summed together as they accumulated.

Assumptions for Advancement in Program:
I assumed/observed that the variance of the objects differ because of the stability of their flight.



